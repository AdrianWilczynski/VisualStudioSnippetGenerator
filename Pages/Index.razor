@page "/"

<form class="row">
        <div class="col-12 col-md-6">
            @if (Error != null)
            {
                <div class="alert alert-danger">
                    @Error
                </div>
            }
            
            <div class="row">
                <div class="form-group col-12 col-lg-6">
                    <label for="@nameof(Snippet.CodeSnippet.Header.Title)"
                        class="h5">@nameof(Snippet.CodeSnippet.Header.Title)</label>
                    <input id="@nameof(Snippet.CodeSnippet.Header.Title)" @bind-value="Snippet.CodeSnippet.Header.Title"
                        @bind-value:event="oninput" class="form-control border border-primary" />
                </div>
                <div class="form-group col-12 col-lg-6">
                    <label for="@nameof(Snippet.CodeSnippet.Header.Shortcut)"
                        class="h5">@nameof(Snippet.CodeSnippet.Header.Shortcut)</label>
                    <input id="@nameof(Snippet.CodeSnippet.Header.Shortcut)"
                        @bind-value="Snippet.CodeSnippet.Header.Shortcut" @bind-value:event="oninput"
                        class="form-control border border-primary" />
                </div>
                <div class="form-group col-12 col-lg-6">
                    <label for="@nameof(Snippet.CodeSnippet.Snippet.Code.Language)"
                        class="h5">@nameof(Snippet.CodeSnippet.Snippet.Code.Language)</label>
                    <input id="@nameof(Snippet.CodeSnippet.Snippet.Code.Language)"
                        @bind-value="Snippet.CodeSnippet.Snippet.Code.Language" @bind-value:event="oninput"
                        list="@nameof(Constants.Languages)" class="form-control border border-primary" />

                    <datalist id="@nameof(Constants.Languages)">
                        @foreach (var language in Constants.Languages.All)
                        {
                            <option value="@language" />
                        }
                    </datalist>
                </div>
                <div class="col-12 col-lg-6 mb-3 mb-lg-0">
                    <h2 class="h5">@nameof(Constants.SnippetTypes).ToSeparateWords()</h2>
                    <div class="form-check">
                        <input id="@nameof(Snippet.CodeSnippet.Header.IsExpansion)"
                            @bind="Snippet.CodeSnippet.Header.IsExpansion" type="checkbox" class="form-check-input">
                        <label class="form-check-label" for="@nameof(Snippet.CodeSnippet.Header.IsExpansion)">
                            @Constants.SnippetTypes.Expansion
                        </label>
                    </div>
                    <div class="form-check">
                        <input id="@nameof(Snippet.CodeSnippet.Header.IsSurroundsWith)"
                            @bind="Snippet.CodeSnippet.Header.IsSurroundsWith" type="checkbox" class="form-check-input">
                        <label class="form-check-label" for="@nameof(Snippet.CodeSnippet.Header.IsSurroundsWith)">
                            @Constants.SnippetTypes.SurroundsWith
                        </label>
                    </div>
                </div>
                <div class="form-group col-12 col-lg-6">
                    <label for="@nameof(Snippet.CodeSnippet.Header.Description)"
                        class="h5">@nameof(Snippet.CodeSnippet.Header.Description)</label>
                    <input id="@nameof(Snippet.CodeSnippet.Header.Description)"
                        @bind-value="Snippet.CodeSnippet.Header.Description" @bind-value:event="oninput"
                        class="form-control" />
                </div>
                <div class="form-group col-12 col-lg-6">
                    <label for="@nameof(Snippet.CodeSnippet.Header.Author)"
                        class="h5">@nameof(Snippet.CodeSnippet.Header.Author)</label>
                    <input id="@nameof(Snippet.CodeSnippet.Header.Author)"
                        @bind-value="Snippet.CodeSnippet.Header.Author" @bind-value:event="oninput"
                        class="form-control" />
                </div>
            </div>
            <div>
                <div class="d-flex justify-content-between">
                    <h2 class="h5">@nameof(Snippet.CodeSnippet.Snippet.Imports)</h2>
                    <button type="button" @onclick="AddImport" title="Add Import"
                        class="btn btn-link btn-sm text-decoration-none text-primary p-0">
                        <i class="fas fa-plus"></i>
                    </button>
                </div>
                <div> 
                    @foreach (var import in Snippet.CodeSnippet.Snippet.Imports)
                    {
                        <div class="form-group">
                            <label for="@import.UIIdentifier" class="small">
                                @nameof(import.Namespace)
                            </label>
                            <FocusedInput id="@import.UIIdentifier" class="form-control" @bind-Value="import.Namespace"
                                @bind-Value:event="ValueInput" @onblur="@(_ => RemoveImportIfEmpty(import))" />
                        </div>
                    }

                    @if (Snippet.CodeSnippet.Snippet.Imports.Count == 0)
                    {
                        <p>
                            Click <i>plus</i> button to add <i>@nameof(Import)</i>.
                        </p>
                    }
                </div>
            </div>
            <div class="form-check form-check-inline d-flex justify-content-end mr-0">
                <label class="form-check-label mr-2" for="@nameof(SyncEnabled)">
                    @nameof(SyncEnabled).ToSeparateWords()
                </label>
                <input type="checkbox" @bind="SyncEnabled" id="@nameof(SyncEnabled)" class="form-check-input mr-0">
            </div>
            <div class="form-group">
                <label for="@nameof(Snippet.CodeSnippet.Snippet.Code)"
                    class="h5">@nameof(Snippet.CodeSnippet.Snippet.Code)</label>
                <textarea id="@nameof(Snippet.CodeSnippet.Snippet.Code)" rows="20"
                    @bind-value="Snippet.CodeSnippet.Snippet.Code.Body" @bind-value:event="oninput"
                    class="form-control border border-primary"></textarea>
            </div>
    </div>
    <div class="col-12 col-md-6">
        <div>
            <div class="d-flex justify-content-between">
                <h2 class="h5">@nameof(Snippet.CodeSnippet.Snippet.Declarations)</h2>
                <button type="button" @onclick="AddDeclaration" title="Add Declaration"
                    class="btn btn-link btn-sm text-decoration-none text-primary p-0">
                    <i class="fas fa-plus"></i>
                </button>
            </div>
            <div class="row">
                @foreach (var (declaration, i) in Snippet.CodeSnippet.Snippet.Declarations.Select((d, i) => (d, i)))
                {
                    <div class="col-12 col-md-6 col-lg-4">
                        <div class="d-flex justify-content-end">
                            @if (i != 0)
                            {
                                <button @onclick="@(() => MoveDeclarationUp(i))" type="button" title="Move up"
                                    class="btn btn-link btn-sm text-decoration-none text-primary">
                                    <i class="fas fa-arrow-up"></i>
                                </button>
                            }
                            @if (i != Snippet.CodeSnippet.Snippet.Declarations.Count - 1)
                            {
                                <button @onclick="@(() => MoveDeclarationDown(i))" type="button" title="Move down"
                                    class="btn btn-link btn-sm text-decoration-none text-primary">
                                    <i class="fas fa-arrow-down"></i>
                                </button>
                            }
                            <button @onclick="@(() => RemoveDeclaration(declaration))" type="button"
                                title="Remove Declaration" class="btn btn-link btn-sm text-decoration-none text-danger">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                        <div class="form-check form-check-inline d-flex justify-content-end mr-2">
                            <label class="form-check-label small mr-2"
                                for="@nameof(@declaration.Editable)-@declaration.UIIdentifier">
                                @nameof(declaration.Editable)
                            </label>
                            <input id="@nameof(@declaration.Editable)-@declaration.UIIdentifier" type="checkbox"
                                @bind="declaration.Editable" class="form-check-input mr-0" />
                        </div>
                        <div class="form-group">
                            <label for="@nameof(@declaration.Identifier)-@declaration.UIIdentifier" class="small">
                                @nameof(declaration.Identifier)
                            </label>
                            <FocusedInput id="@(nameof(declaration.Identifier) + '-' + declaration.UIIdentifier)"
                                Focus="declaration.Focus" @bind-Value="declaration.Identifier"
                                class="form-control form-control-sm border border-primary" />
                        </div>
                        <div class="form-group">
                            <label for="@nameof(@declaration.DefaultValue)-@declaration.UIIdentifier" class="small">
                                @nameof(declaration.DefaultValue).ToSeparateWords()
                            </label>
                            <input id="@nameof(@declaration.DefaultValue)-@declaration.UIIdentifier"
                                @bind-value="declaration.DefaultValue" @bind-value:event="oninput"
                                class="form-control form-control-sm border border-primary" />
                        </div>
                        <div class="form-group">
                            <label for="@nameof(@declaration.ToolTip)-@declaration.UIIdentifier" class="small">
                                @nameof(declaration.ToolTip)
                            </label>
                            <input id="@nameof(@declaration.ToolTip)-@declaration.UIIdentifier"
                                @bind-value="declaration.ToolTip" @bind-value:event="oninput"
                                class="form-control form-control-sm" />
                        </div>
                        <div class="form-group">
                            <label for="@nameof(@declaration.Type)-@declaration.UIIdentifier" class="small">
                                @nameof(declaration.Type)
                            </label>
                            <input id="@nameof(@declaration.Type)-@declaration.UIIdentifier"
                                @bind-value="declaration.Type" @bind-value:event="oninput"
                                class="form-control form-control-sm" />
                        </div>
                        @if(IsCSharp)
                        {
                            <div class="form-group">
                                <label for="@nameof(@declaration.Function)-@declaration.UIIdentifier" class="small">
                                    @nameof(declaration.Function)
                                </label>
                                <input id="@nameof(@declaration.Function)-@declaration.UIIdentifier"
                                    @bind-value="declaration.Function" @bind-value:event="oninput"
                                    list="@nameof(Constants.Functions)" class="form-control form-control-sm" />
                            </div>

                            <datalist id="@nameof(Constants.Functions)">
                                @foreach (var function in Constants.Functions)
                                {
                                    <option value="@function" />
                                }
                            </datalist>
                        }
                    </div>
                }
                
                @if(Snippet.CodeSnippet.Snippet.Declarations.Count == 0)
                {
                    <p class="pl-3">
                        Input <i>$@nameof(Declaration.Identifier)$</i> into <i>@nameof(Code)</i> or click <i>plus</i> button to add <i>@nameof(Declaration)</i>.
                    </p>
                }
            </div>
        </div>
        <div class="form-group">
            <label for="@nameof(SnippetText)" class="h5">@nameof(SnippetText).ToSeparateWords()</label>
            <textarea id="@nameof(SnippetText)" @bind="SnippetText" @ref="SnippetTextTextarea"
                class="form-control border border-primary" rows=30></textarea>
        </div>
        <div class="d-flex justify-content-end">
            <button type="button" @onclick="CopyToClipboardAsync" class="btn btn-primary">
                <i class="fas fa-copy"></i> Copy to Clipboard!
            </button>
        </div>
    </div>
</form>